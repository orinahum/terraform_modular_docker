
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # docker_network.app_network[0m will be created
[0m  [32m+[0m[0m resource "docker_network" "app_network" {
      [32m+[0m[0m driver      = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m internal    = (known after apply)
      [32m+[0m[0m ipam_driver = "default"
      [32m+[0m[0m name        = "app_network"
      [32m+[0m[0m options     = (known after apply)
      [32m+[0m[0m scope       = (known after apply)
    }

[1m  # module.app.docker_container.app[0m will be created
[0m  [32m+[0m[0m resource "docker_container" "app" {
      [32m+[0m[0m attach                                      = false
      [32m+[0m[0m bridge                                      = (known after apply)
      [32m+[0m[0m command                                     = (known after apply)
      [32m+[0m[0m container_logs                              = (known after apply)
      [32m+[0m[0m container_read_refresh_timeout_milliseconds = 15000
      [32m+[0m[0m entrypoint                                  = (known after apply)
      [32m+[0m[0m env                                         = (known after apply)
      [32m+[0m[0m exit_code                                   = (known after apply)
      [32m+[0m[0m hostname                                    = (known after apply)
      [32m+[0m[0m id                                          = (known after apply)
      [32m+[0m[0m image                                       = "alayani/hello_world_app:latest"
      [32m+[0m[0m init                                        = (known after apply)
      [32m+[0m[0m ipc_mode                                    = (known after apply)
      [32m+[0m[0m log_driver                                  = (known after apply)
      [32m+[0m[0m logs                                        = false
      [32m+[0m[0m must_run                                    = true
      [32m+[0m[0m name                                        = "hello_world_app"
      [32m+[0m[0m network_data                                = (known after apply)
      [32m+[0m[0m read_only                                   = false
      [32m+[0m[0m remove_volumes                              = true
      [32m+[0m[0m restart                                     = "no"
      [32m+[0m[0m rm                                          = false
      [32m+[0m[0m runtime                                     = (known after apply)
      [32m+[0m[0m security_opts                               = (known after apply)
      [32m+[0m[0m shm_size                                    = (known after apply)
      [32m+[0m[0m start                                       = true
      [32m+[0m[0m stdin_open                                  = false
      [32m+[0m[0m stop_signal                                 = (known after apply)
      [32m+[0m[0m stop_timeout                                = (known after apply)
      [32m+[0m[0m tty                                         = false
      [32m+[0m[0m wait                                        = false
      [32m+[0m[0m wait_timeout                                = 60

      [32m+[0m[0m networks_advanced {
          [32m+[0m[0m aliases = []
          [32m+[0m[0m name    = (known after apply)
        }
    }

[1m  # module.nginx.docker_container.nginx[0m will be created
[0m  [32m+[0m[0m resource "docker_container" "nginx" {
      [32m+[0m[0m attach                                      = false
      [32m+[0m[0m bridge                                      = (known after apply)
      [32m+[0m[0m command                                     = (known after apply)
      [32m+[0m[0m container_logs                              = (known after apply)
      [32m+[0m[0m container_read_refresh_timeout_milliseconds = 15000
      [32m+[0m[0m entrypoint                                  = (known after apply)
      [32m+[0m[0m env                                         = (known after apply)
      [32m+[0m[0m exit_code                                   = (known after apply)
      [32m+[0m[0m hostname                                    = (known after apply)
      [32m+[0m[0m id                                          = (known after apply)
      [32m+[0m[0m image                                       = "nginx:latest"
      [32m+[0m[0m init                                        = (known after apply)
      [32m+[0m[0m ipc_mode                                    = (known after apply)
      [32m+[0m[0m log_driver                                  = (known after apply)
      [32m+[0m[0m logs                                        = false
      [32m+[0m[0m must_run                                    = true
      [32m+[0m[0m name                                        = "nginx"
      [32m+[0m[0m network_data                                = (known after apply)
      [32m+[0m[0m read_only                                   = false
      [32m+[0m[0m remove_volumes                              = true
      [32m+[0m[0m restart                                     = "no"
      [32m+[0m[0m rm                                          = false
      [32m+[0m[0m runtime                                     = (known after apply)
      [32m+[0m[0m security_opts                               = (known after apply)
      [32m+[0m[0m shm_size                                    = (known after apply)
      [32m+[0m[0m start                                       = true
      [32m+[0m[0m stdin_open                                  = false
      [32m+[0m[0m stop_signal                                 = (known after apply)
      [32m+[0m[0m stop_timeout                                = (known after apply)
      [32m+[0m[0m tty                                         = false
      [32m+[0m[0m wait                                        = false
      [32m+[0m[0m wait_timeout                                = 60

      [32m+[0m[0m networks_advanced {
          [32m+[0m[0m aliases = []
          [32m+[0m[0m name    = (known after apply)
        }

      [32m+[0m[0m ports {
          [32m+[0m[0m external = 443
          [32m+[0m[0m internal = 443
          [32m+[0m[0m ip       = "0.0.0.0"
          [32m+[0m[0m protocol = "tcp"
        }
    }

[1mPlan:[0m 3 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m app_ip         = (known after apply)
  [32m+[0m[0m app_network_id = (known after apply)
  [32m+[0m[0m nginx_ip       = (known after apply)
[0m[1mdocker_network.app_network: Creating...[0m[0m
[0m[1mdocker_network.app_network: Creation complete after 5s [id=91c9c4857ebe1c30f86967e5833c24b6bfc65c3ab0810e1b9d8d54a6650a0a30][0m
[0m[1mmodule.app.docker_container.app: Creating...[0m[0m
[0m[1mmodule.nginx.docker_container.nginx: Creating...[0m[0m
[0m[1mmodule.nginx.docker_container.nginx: Creation complete after 0s [id=2474ba5c1bebe8ca3b94c3b89c64a67eec5258d245d885494486ce5f9ab88778][0m
[0m[1mmodule.app.docker_container.app: Creation complete after 0s [id=ed8273e597295621282c2d7ee5dca32dd033b237eb9c19be79a24f382fb6a6b5][0m
[0m[1m[32m
Apply complete! Resources: 3 added, 0 changed, 0 destroyed.
[0m[0m[1m[32m
Outputs:

[0mapp_ip = "172.18.0.3"
app_network_id = "91c9c4857ebe1c30f86967e5833c24b6bfc65c3ab0810e1b9d8d54a6650a0a30"
nginx_ip = "172.18.0.2"
